{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\BeachExpress\\\\client\\\\src\\\\components\\\\SignInCompany.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nimport LinkInClass from \"../components/LinkInClass\";\nexport default class SignInCompany extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.fileSelectedHandler = e => {\n      this.setState({\n        selectedFile: e.target.files[0]\n      });\n    };\n\n    this.clickPickImage = e => {\n      console.log(this.state.name);\n      this.fileInput.click();\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.state.submited = true;\n      this.validate();\n\n      if (this.isAllValid()) {\n        let formData = new FormData();\n        formData.append(\"profilePhoto\", this.state.selectedFile);\n        const companyObject = {\n          name: this.state.name,\n          username: this.state.username,\n          phone_number: this.state.phone_number,\n          password: this.state.password,\n          img: formData\n        };\n        axios.post(\"companies.json\", companyObject) //axios.post(`${SERVER_HOST}/company`, companyObject)\n        .then(res => {\n          if (res.data) {\n            if (res.data.errorMessage) {\n              console.log(res.data.errorMessage);\n            } else {\n              console.log(\"Record added\");\n              this.setState({\n                redirectToDisplayAllCars: true\n              });\n            }\n          } else {\n            console.log(\"Record not added\");\n          }\n        });\n      }\n    };\n\n    this.state = {\n      username: \"\",\n      isValidUsername: false,\n      name: \"\",\n      isValidName: false,\n      phone_number: 0,\n      isValidPhone_number: false,\n      selectedFile: null,\n      isValidImage: false,\n      password: \"\",\n      isValidPassword: false,\n      passwordConfirmation: \"\",\n      submited: false\n    };\n  }\n\n  validateConfirmPassword() {\n    return this.state.password === this.state.passwordConfirmation;\n  }\n\n  validateName() {\n    if (this.state.name.length > 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  validateUsername() {\n    if (this.state.username.length > 3) {\n      return true;\n    }\n\n    return false;\n  }\n\n  validatePassword() {\n    if (this.state.password.length > 5) {\n      return true;\n    }\n\n    return false;\n  }\n\n  validateImage() {\n    if (this.state.selectedFile != null) {\n      return true;\n    }\n\n    return false;\n  }\n\n  validatePhone_number() {\n    if (this.state.password.length > 5) {\n      return true;\n    }\n\n    return false;\n  }\n\n  validate() {\n    this.setState({\n      isValidUsername: this.validateUsername(),\n      isValidName: this.validateName(),\n      isValidPhone_number: this.validatePhone_number(),\n      isValidPassword: this.validatePassword(),\n      isValidImage: this.validateImage()\n    });\n  }\n\n  isAllValid() {\n    return this.state.isValidUsername && this.state.isValidName && this.state.isValidPhone_number && this.state.isValidPassword && this.validateConfirmPassword();\n  }\n\n  /*\r\n      handleSubmit = (e) => \r\n      {\r\n          e.preventDefault()\r\n  \r\n          const userObject = {\r\n              userName: this.state.userName,\r\n              password: this.stte.password\r\n          }\r\n  \r\n          axios.get(`${SERVER_HOST}/users`, userObject)\r\n          .then(res => \r\n          {   \r\n              if(res.data)\r\n              {\r\n                  if (res.data.errorMessage)\r\n                  {\r\n                      console.log(res.data.errorMessage)    \r\n                  }\r\n                  else\r\n                  {   \r\n                      console.log(\"Record added\")\r\n                      this.setState({redirectToDisplayAllCars:true})\r\n                  } \r\n              }\r\n              else\r\n              {\r\n                  console.log(\"Record not added\")\r\n              }\r\n          })\r\n      }\r\n  \r\n      validatePassword()\r\n      {    \r\n          const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/;\r\n          return pattern.test(String(this.state.password)); \r\n      }\r\n    */\n\n  /*\r\n     render()\r\n     {        \r\n         return (\r\n             <div className=\"form-container\">                                           \r\n                     \r\n                 <Form>\r\n                     <Form.Group controlId=\"userName\">\r\n                         <Form.Label>UserName</Form.Label>\r\n                         <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleChange} />\r\n                     </Form.Group>\r\n     \r\n                     <Form.Group controlId=\"userName\">\r\n                         <Form.Label>Password</Form.Label>\r\n                         <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                     </Form.Group>\r\n             \r\n                     <LinkInClass value=\"Enter\" className=\"green-button\" onClick={this.handleSubmit}/>              \r\n             \r\n                     <Link className=\"green-button\" to={\"/MainPage\"}>Enter</Link>\r\n                 </Form>\r\n             </div>\r\n         )\r\n     }\r\n  */\n\n  /*\r\n      render()\r\n      {        \r\n          return (\r\n              <div>\r\n                  <img className=\"img-logo\" src=\"logo.png\" alt=\"\"/>\r\n                  <div className=\"form-container\" id = \"loginOrRegistrationForm\">  \r\n                      <Form>\r\n                          <Form.Group controlId=\"name\">\r\n                              <Form.Label>Name</Form.Label>\r\n                              <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n                          </Form.Group>\r\n  \r\n                          <Form.Group controlId=\"surname\">\r\n                              <Form.Label>Surname</Form.Label>\r\n                              <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"surname\" value={this.state.surname} onChange={this.handleChange} />\r\n                          </Form.Group>\r\n  \r\n                          <Form.Group controlId=\"username\">\r\n                              <Form.Label>Username</Form.Label>\r\n                              <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                          </Form.Group>\r\n  \r\n                          <Form.Group controlId=\"email\">\r\n                              <Form.Label>Email</Form.Label>\r\n                              <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                          </Form.Group>\r\n  \r\n                          <Form.Group controlId=\"password\">\r\n                              <Form.Label>Password</Form.Label>\r\n                              <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                          </Form.Group>\r\n      \r\n                          <Form.Group controlId=\"passwordConfirmation\">\r\n                              <Form.Label>Password Confirmation</Form.Label>\r\n                              <Form.Control ref = {(input) => { this.inputToFocus = input }} className = {this.validateConfirmPassword() ? \"input\" : \"input.error\"} type=\"password\" name=\"passwordConfirmation\" value={this.state.passwordConfirmation} onChange={this.handleChange}/>\r\n                          </Form.Group>\r\n                              \r\n                          <Link className=\"red-button\" to={\"/Login\"}>Cancel</Link>       \r\n                          <Link className=\"blue-button\" to={\"SignInOthers\"}>Sign In as a shop or worker</Link>\r\n                          <Link className=\"green-button\" to={\"/MainPage\"}>Sign In</Link>\r\n                      </Form>\r\n                  </div>\r\n              </div>\r\n          )\r\n      }*/\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img-logo\",\n      src: \"logo.png\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"form-container\",\n      noValidate: true,\n      id: \"loginOrRegistrationForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"form-tittle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281\n      },\n      __self: this\n    }, \"Sign in as a Company\"), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: this.state.isValidName || !this.state.submited ? \"input-form\" : \"input-form-error\",\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Charles\",\n      autoComplete: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      ref: input => {\n        this.inputToFocus = input;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      className: this.state.isValidUsername || !this.state.submited ? \"input-form\" : \"input-form-error\",\n      name: \"username\",\n      type: \"text\",\n      placeholder: \"CharlesSmith\",\n      autoComplete: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"Phone Number\"), React.createElement(\"input\", {\n      // className = {this.state.isValidPhone_number || !this.state.submited ? \"input-form\" : \"input-form-error\"}\n      name: \"phone_number\",\n      type: \"number\",\n      placeholder: \"123456789\",\n      autoComplete: \"phone_number\",\n      value: this.state.phone_number,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, \"Company Logo\"), React.createElement(\"input\", {\n      //style={{display:'none'}}\n      //name = \"image\"           \n      type: \"file\",\n      onChange: this.fileSelectedHandler //ref={fileInput => this.fileInput = fileInput}\n      ,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      className: this.state.isValidPassword || !this.state.submited ? \"input-form\" : \"input-form-error\",\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"\",\n      autoComplete: \"password\",\n      title: \"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (\\xA3!#\\u20AC$%^&*)\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }, \"Password Again\"), React.createElement(\"input\", {\n      className: this.validateConfirmPassword() || !this.state.submited ? \"input-form\" : \"input-form-error\",\n      name: \"passwordConfirmation\",\n      type: \"password\",\n      placeholder: \"\",\n      autoComplete: \"passwordConfirmation\",\n      value: this.state.passwordConfirmation,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"red-button\",\n      to: \"/Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Link, {\n      className: \"blue-button\",\n      to: \"/SignIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    }, \"Sign in as a user\"), React.createElement(LinkInClass, {\n      value: \"Sign In\",\n      className: \"green-button\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\BeachExpress\\client\\src\\components\\SignInCompany.js"],"names":["React","Component","Redirect","Link","Form","axios","SERVER_HOST","LinkInClass","SignInCompany","constructor","props","handleChange","e","setState","target","name","value","fileSelectedHandler","selectedFile","files","clickPickImage","console","log","state","fileInput","click","handleSubmit","preventDefault","submited","validate","isAllValid","formData","FormData","append","companyObject","username","phone_number","password","img","post","then","res","data","errorMessage","redirectToDisplayAllCars","isValidUsername","isValidName","isValidPhone_number","isValidImage","isValidPassword","passwordConfirmation","validateConfirmPassword","validateName","length","validateUsername","validatePassword","validateImage","validatePhone_number","render","input","inputToFocus"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport {Redirect, Link} from \"react-router-dom\"\r\nimport Form from \"react-bootstrap/Form\"\r\n\r\nimport axios from \"axios\"\r\n\r\nimport {SERVER_HOST} from \"../config/global_constants\"\r\n\r\nimport LinkInClass from \"../components/LinkInClass\"\r\n\r\n\r\nexport default class SignInCompany extends Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            username:\"\",\r\n            isValidUsername: false,\r\n            name:\"\",\r\n            isValidName: false,\r\n            phone_number:0,\r\n            isValidPhone_number: false,\r\n            selectedFile:null, \r\n            isValidImage: false,\r\n            password:\"\",\r\n            isValidPassword: false,\r\n            passwordConfirmation:\"\",\r\n            submited:false\r\n        }\r\n    }\r\n\r\n\r\n    \r\n\r\n    handleChange = (e) => \r\n    {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n    \r\n\r\n    fileSelectedHandler = e => \r\n    {\r\n       this.setState({\r\n            selectedFile: e.target.files[0]\r\n       })\r\n    }\r\n\r\n\r\n    validateConfirmPassword()\r\n    {    \r\n        return (this.state.password === this.state.passwordConfirmation); \r\n    }\r\n\r\n    validateName()\r\n    {    \r\n        if(this.state.name.length>0){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    validateUsername()\r\n    {    \r\n        if(this.state.username.length>3){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    validatePassword(){\r\n        if(this.state.password.length>5){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    validateImage(){\r\n        if(this.state.selectedFile!=null){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    validatePhone_number(){\r\n        if(this.state.password.length>5){\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    validate(){\r\n        this.setState({\r\n            isValidUsername : this.validateUsername(),\r\n            isValidName : this.validateName(),\r\n            isValidPhone_number : this.validatePhone_number(),\r\n            isValidPassword : this.validatePassword(),\r\n            isValidImage : this.validateImage()\r\n       })\r\n        \r\n    }\r\n\r\n    isAllValid(){\r\n        return this.state.isValidUsername && this.state.isValidName && this.state.isValidPhone_number && this.state.isValidPassword && this.validateConfirmPassword();\r\n    }\r\n\r\n    clickPickImage = (e) =>\r\n    {\r\n        console.log(this.state.name);\r\n        this.fileInput.click();\r\n        \r\n    }\r\n\r\n\r\n    handleSubmit = (e) =>\r\n    {\r\n        e.preventDefault();\r\n        this.state.submited = true;\r\n        this.validate();\r\n\r\n        if(this.isAllValid()){\r\n\r\n            let formData = new FormData()  \r\n            formData.append(\"profilePhoto\", this.state.selectedFile)\r\n\r\n            const companyObject = {\r\n                name: this.state.name,\r\n                username: this.state.username,\r\n                phone_number: this.state.phone_number,\r\n                password: this.state.password,\r\n                img: formData\r\n            }\r\n\r\n            axios.post(`companies.json`,companyObject)//axios.post(`${SERVER_HOST}/company`, companyObject)\r\n            .then(res => \r\n            {   \r\n                if(res.data)\r\n                {\r\n                    if (res.data.errorMessage)\r\n                    {\r\n                        console.log(res.data.errorMessage)    \r\n                    }\r\n                    else\r\n                    {   \r\n                        console.log(\"Record added\")\r\n                        this.setState({redirectToDisplayAllCars:true})\r\n                    } \r\n                }\r\n                else\r\n                {\r\n                    console.log(\"Record not added\")\r\n                }\r\n            }) \r\n        }\r\n    }\r\n\r\n    \r\n\r\n/*\r\n    handleSubmit = (e) => \r\n    {\r\n        e.preventDefault()\r\n\r\n        const userObject = {\r\n            userName: this.state.userName,\r\n            password: this.stte.password\r\n        }\r\n\r\n        axios.get(`${SERVER_HOST}/users`, userObject)\r\n        .then(res => \r\n        {   \r\n            if(res.data)\r\n            {\r\n                if (res.data.errorMessage)\r\n                {\r\n                    console.log(res.data.errorMessage)    \r\n                }\r\n                else\r\n                {   \r\n                    console.log(\"Record added\")\r\n                    this.setState({redirectToDisplayAllCars:true})\r\n                } \r\n            }\r\n            else\r\n            {\r\n                console.log(\"Record not added\")\r\n            }\r\n        })\r\n    }\r\n\r\n    validatePassword()\r\n    {    \r\n        const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/;\r\n        return pattern.test(String(this.state.password)); \r\n    }\r\n  */\r\n /*\r\n    render()\r\n    {        \r\n        return (\r\n            <div className=\"form-container\">                                           \r\n                    \r\n                <Form>\r\n                    <Form.Group controlId=\"userName\">\r\n                        <Form.Label>UserName</Form.Label>\r\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId=\"userName\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n            \r\n                    <LinkInClass value=\"Enter\" className=\"green-button\" onClick={this.handleSubmit}/>              \r\n            \r\n                    <Link className=\"green-button\" to={\"/MainPage\"}>Enter</Link>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n*/\r\n/*\r\n    render()\r\n    {        \r\n        return (\r\n            <div>\r\n                <img className=\"img-logo\" src=\"logo.png\" alt=\"\"/>\r\n                <div className=\"form-container\" id = \"loginOrRegistrationForm\">  \r\n                    <Form>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"surname\">\r\n                            <Form.Label>Surname</Form.Label>\r\n                            <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"surname\" value={this.state.surname} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"username\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"passwordConfirmation\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control ref = {(input) => { this.inputToFocus = input }} className = {this.validateConfirmPassword() ? \"input\" : \"input.error\"} type=\"password\" name=\"passwordConfirmation\" value={this.state.passwordConfirmation} onChange={this.handleChange}/>\r\n                        </Form.Group>\r\n                            \r\n                        <Link className=\"red-button\" to={\"/Login\"}>Cancel</Link>       \r\n                        <Link className=\"blue-button\" to={\"SignInOthers\"}>Sign In as a shop or worker</Link>\r\n                        <Link className=\"green-button\" to={\"/MainPage\"}>Sign In</Link>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }*/\r\n\r\n    \r\n    render() \r\n    {     \r\n        return (\r\n            <div> \r\n                <img className=\"img-logo\" src=\"logo.png\" alt=\"\"/>\r\n\r\n                <form className=\"form-container\" noValidate = {true} id = \"loginOrRegistrationForm\">\r\n                \r\n                    <h3 className=\"form-tittle\">Sign in as a Company</h3>\r\n\r\n                    <div className=\"form-group\">\r\n                    \r\n                        <label className=\"label-form\">Name</label>\r\n                        <input  className = {this.state.isValidName|| !this.state.submited ? \"input-form\" : \"input-form-error\"}\r\n                            name = \"name\"              \r\n                            type = \"text\"\r\n                            placeholder = \"Charles\"\r\n                            autoComplete=\"name\"\r\n                            value = {this.state.name}\r\n                            onChange = {this.handleChange}\r\n                            ref = {(input) => { this.inputToFocus = input }} \r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label className=\"label-form\">Username</label>  \r\n                        <input  className = {this.state.isValidUsername || !this.state.submited? \"input-form\" : \"input-form-error\"}\r\n                            name = \"username\"              \r\n                            type = \"text\"\r\n                            placeholder = \"CharlesSmith\"\r\n                            autoComplete=\"username\"\r\n                            value = {this.state.username}\r\n                            onChange = {this.handleChange}\r\n                        />\r\n                    </div>   \r\n                    \r\n                    <div className=\"form-group\"></div>\r\n                    <label className=\"label-form\">Phone Number</label> \r\n                    <input // className = {this.state.isValidPhone_number || !this.state.submited ? \"input-form\" : \"input-form-error\"}\r\n                        name = \"phone_number\"              \r\n                        type = \"number\"\r\n                        placeholder = \"123456789\"\r\n                        autoComplete=\"phone_number\"\r\n                        value = {this.state.phone_number}\r\n                        onChange = {this.handleChange}\r\n                    />\r\n                    <br/>    \r\n\r\n                    <label className=\"label-form\">Company Logo</label> \r\n                    <input \r\n                        //style={{display:'none'}}\r\n                        //name = \"image\"           \r\n                        type = \"file\"\r\n                        onChange = {this.fileSelectedHandler}\r\n                        //ref={fileInput => this.fileInput = fileInput}\r\n                    />\r\n                    \r\n\r\n                    {/*<button onClick={this.clickPickImage}>Pick Image</button>*/}\r\n                    <br/>      \r\n         \r\n\r\n                    <label  className=\"label-form\">Password</label> \r\n                    <input  className = {this.state.isValidPassword|| !this.state.submited ? \"input-form\" : \"input-form-error\"}\r\n                        name = \"password\"           \r\n                        type = \"password\"\r\n                        placeholder = \"\"\r\n                        autoComplete=\"password\"\r\n                        title = \"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (£!#€$%^&*)\"\r\n                        value = {this.state.password}\r\n                        onChange = {this.handleChange}\r\n                    />\r\n                    <br/>     \r\n                       \r\n\r\n                    <label className=\"label-form\">Password Again</label> \r\n                    <input className = {this.validateConfirmPassword()|| !this.state.submited ? \"input-form\" : \"input-form-error\"}   \r\n                        name = \"passwordConfirmation\"    \r\n                        type = \"password\"\r\n                        placeholder = \"\"\r\n                        autoComplete=\"passwordConfirmation\"\r\n                        value = {this.state.passwordConfirmation}\r\n                        onChange = {this.handleChange}\r\n                    /><br/><br/>\r\n                    \r\n                    <Link className=\"red-button\" to={\"/Login\"}>Cancel</Link> \r\n                    <Link className=\"blue-button\" to={\"/SignIn\"}>Sign in as a user</Link> \r\n                    <LinkInClass value=\"Sign In\" className=\"green-button\" onClick={this.handleSubmit} />\r\n                      \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n"]},"metadata":{},"sourceType":"module"}