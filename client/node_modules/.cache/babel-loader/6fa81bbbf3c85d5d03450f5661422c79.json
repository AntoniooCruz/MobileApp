{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\BeachExpress\\\\client\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nimport LinkInClass from \"../components/LinkInClass\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userName: \"\",\n      password: \"\"\n    };\n  }\n  /*componentDidMount() \r\n  {     \r\n      this.inputToFocus.focus()        \r\n  }\r\n    handleChange = (e) => \r\n  {\r\n      this.setState({[e.target.name]: e.target.value})\r\n  }\r\n    handleSubmit = (e) => \r\n  {\r\n      e.preventDefault()\r\n        const userObject = {\r\n          userName: this.state.userName,\r\n          password: this.state.password\r\n      }\r\n        axios.get(`${SERVER_HOST}/users`, userObject)\r\n      .then(res => \r\n      {   \r\n          if(res.data)\r\n          {\r\n              if (res.data.errorMessage)\r\n              {\r\n                  console.log(res.data.errorMessage)    \r\n              }\r\n              else\r\n              {   \r\n                  console.log(\"Record added\")\r\n                  this.setState({redirectToDisplayAllCars:true})\r\n              } \r\n          }\r\n          else\r\n          {\r\n              console.log(\"Record not added\")\r\n          }\r\n      })\r\n  }\r\n    validatePassword()\r\n  {    \r\n      const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/;\r\n      return pattern.test(String(this.state.password)); \r\n  }\r\n  */\n\n  /*\r\n     render()\r\n     {        \r\n         return (\r\n             <div className=\"form-container\">                                           \r\n                     \r\n                 <Form>\r\n                     <Form.Group controlId=\"userName\">\r\n                         <Form.Label>UserName</Form.Label>\r\n                         <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleChange} />\r\n                     </Form.Group>\r\n     \r\n                     <Form.Group controlId=\"userName\">\r\n                         <Form.Label>Password</Form.Label>\r\n                         <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                     </Form.Group>\r\n             \r\n                     <LinkInClass value=\"Enter\" className=\"green-button\" onClick={this.handleSubmit}/>              \r\n             \r\n                     <Link className=\"green-button\" to={\"/MainPage\"}>Enter</Link>\r\n                 </Form>\r\n             </div>\r\n         )\r\n     }\r\n  */\n\n  /*render()\r\n  {        \r\n      return (\r\n          <div className=\"form-container\">                                           \r\n                  \r\n              <Form>\r\n                  <Form.Group controlId=\"userName\">\r\n                      <Form.Label>UserName</Form.Label>\r\n                      <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"userName\" value={this.state.userName} />\r\n                  </Form.Group>\r\n  \r\n                  <Form.Group controlId=\"userName\">\r\n                      <Form.Label>Password</Form.Label>\r\n                      <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"password\" value={this.state.password} />\r\n                  </Form.Group>\r\n                   \r\n          \r\n                  <Link className=\"green-button\" to={\"/MainPage\"}>Enter</Link>       \r\n          \r\n                  <Link className=\"blue-button\" to={\"/MainPage\"}>Sign In</Link>\r\n              </Form>\r\n          </div>\r\n      )\r\n  }*/\n\n\n  render() {\n    /*let errorMessage = \"\";\r\n    if(this.state.wasSubmittedAtLeastOnce)\r\n    {\r\n        errorMessage = <div className=\"error\">Login Details are incorrect<br/></div>;\r\n    }*/\n    return React.createElement(\"form\", {\n      noValidate: true,\n      id: \"loginForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, errorMessage, React.createElement(\"input\", {\n      name: \"email\",\n      type: \"email\",\n      placeholder: \"Email\",\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      value: this.state.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Login\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\BeachExpress\\client\\src\\components\\Login.js"],"names":["React","Component","Redirect","Link","Form","axios","SERVER_HOST","LinkInClass","Login","constructor","props","state","userName","password","render","errorMessage","email"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,EAAkBC,IAAlB,QAA6B,kBAA7B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,WAAR,QAA0B,4BAA1B;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AAGA,eAAe,MAAMC,KAAN,SAAoBP,SAApB,CACf;AACIQ,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAC,EADA;AAETC,MAAAA,QAAQ,EAAC;AAFA,KAAb;AAIH;AAGD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CH;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBG;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAC,EAAAA,MAAM,GACN;AACI;;;;;AAMA,WACE;AAAM,MAAA,UAAU,EAAI,IAApB;AAA0B,MAAA,EAAE,EAAG,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGC,YADH,EAGE;AACL,MAAA,IAAI,EAAG,OADF;AAEI,MAAA,IAAI,EAAG,OAFX;AAGI,MAAA,WAAW,EAAG,OAHlB;AAII,MAAA,KAAK,EAAI,KAAKJ,KAAL,CAAWK,KAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAWE;AACP,MAAA,IAAI,EAAG,UADA;AAEE,MAAA,IAAI,EAAG,UAFT;AAGE,MAAA,WAAW,EAAG,UAHhB;AAIE,MAAA,KAAK,EAAI,KAAKL,KAAL,CAAWE,QAJtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,EAmBE;AACE,MAAA,IAAI,EAAG,QADT;AAEE,MAAA,KAAK,EAAG,OAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBF,CADF;AA0BH;;AA/IL","sourcesContent":["import React, {Component} from \"react\"\r\nimport {Redirect, Link} from \"react-router-dom\"\r\nimport Form from \"react-bootstrap/Form\"\r\n\r\nimport axios from \"axios\"\r\n\r\nimport {SERVER_HOST} from \"../config/global_constants\"\r\n\r\nimport LinkInClass from \"../components/LinkInClass\"\r\n\r\n\r\nexport default class Login extends Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            userName:\"\",\r\n            password:\"\"\r\n        }\r\n    }\r\n\r\n\r\n    /*componentDidMount() \r\n    {     \r\n        this.inputToFocus.focus()        \r\n    }\r\n\r\n    handleChange = (e) => \r\n    {\r\n        this.setState({[e.target.name]: e.target.value})\r\n    }\r\n\r\n    handleSubmit = (e) => \r\n    {\r\n        e.preventDefault()\r\n\r\n        const userObject = {\r\n            userName: this.state.userName,\r\n            password: this.state.password\r\n        }\r\n\r\n        axios.get(`${SERVER_HOST}/users`, userObject)\r\n        .then(res => \r\n        {   \r\n            if(res.data)\r\n            {\r\n                if (res.data.errorMessage)\r\n                {\r\n                    console.log(res.data.errorMessage)    \r\n                }\r\n                else\r\n                {   \r\n                    console.log(\"Record added\")\r\n                    this.setState({redirectToDisplayAllCars:true})\r\n                } \r\n            }\r\n            else\r\n            {\r\n                console.log(\"Record not added\")\r\n            }\r\n        })\r\n    }\r\n\r\n    validatePassword()\r\n    {    \r\n        const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/;\r\n        return pattern.test(String(this.state.password)); \r\n    }\r\n  */\r\n /*\r\n    render()\r\n    {        \r\n        return (\r\n            <div className=\"form-container\">                                           \r\n                    \r\n                <Form>\r\n                    <Form.Group controlId=\"userName\">\r\n                        <Form.Label>UserName</Form.Label>\r\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId=\"userName\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n            \r\n                    <LinkInClass value=\"Enter\" className=\"green-button\" onClick={this.handleSubmit}/>              \r\n            \r\n                    <Link className=\"green-button\" to={\"/MainPage\"}>Enter</Link>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n*/\r\n    /*render()\r\n    {        \r\n        return (\r\n            <div className=\"form-container\">                                           \r\n                    \r\n                <Form>\r\n                    <Form.Group controlId=\"userName\">\r\n                        <Form.Label>UserName</Form.Label>\r\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"userName\" value={this.state.userName} />\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId=\"userName\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"password\" value={this.state.password} />\r\n                    </Form.Group>\r\n                     \r\n            \r\n                    <Link className=\"green-button\" to={\"/MainPage\"}>Enter</Link>       \r\n            \r\n                    <Link className=\"blue-button\" to={\"/MainPage\"}>Sign In</Link>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }*/\r\n\r\n    render() \r\n    {\r\n        /*let errorMessage = \"\";\r\n        if(this.state.wasSubmittedAtLeastOnce)\r\n        {\r\n            errorMessage = <div className=\"error\">Login Details are incorrect<br/></div>;\r\n        }*/\r\n         \r\n        return (          \r\n          <form noValidate = {true} id = \"loginForm\">\r\n            {errorMessage}\r\n            \r\n            <input     \r\n\t\t\t    name = \"email\"           \r\n                type = \"email\"\r\n                placeholder = \"Email\"\r\n                value = {this.state.email}\r\n            />\r\n            \r\n               \r\n            <input       \r\n\t\t\t  name = \"password\"      \r\n              type = \"password\"\r\n              placeholder = \"Password\"\r\n              value = {this.state.password}\r\n            />\r\n\r\n                                    \r\n            <input \r\n              type = \"submit\" \r\n              value = \"Login\" \r\n            />\r\n          </form>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}