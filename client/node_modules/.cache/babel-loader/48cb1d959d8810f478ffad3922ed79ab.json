{"ast":null,"code":"import React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nimport LinkInClass from \"../components/LinkInClass\";\nexport default class SignIn extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.state = {\n      username: \"\",\n      name: \"\",\n      surname: \"\",\n      email: \"\",\n      password: \"\",\n      passwordConfirmation: \"\"\n    };\n  }\n  /*componentDidMount() \r\n  {     \r\n      this.inputToFocus.focus()        \r\n  }\r\n  */\n\n\n  validateConfirmPassword() {\n    return this.state.password === this.state.passwordConfirmation;\n  }\n  /*\r\n      handleSubmit = (e) => \r\n      {\r\n          e.preventDefault()\r\n  \r\n          const userObject = {\r\n              userName: this.state.userName,\r\n              password: this.state.password\r\n          }\r\n  \r\n          axios.get(`${SERVER_HOST}/users`, userObject)\r\n          .then(res => \r\n          {   \r\n              if(res.data)\r\n              {\r\n                  if (res.data.errorMessage)\r\n                  {\r\n                      console.log(res.data.errorMessage)    \r\n                  }\r\n                  else\r\n                  {   \r\n                      console.log(\"Record added\")\r\n                      this.setState({redirectToDisplayAllCars:true})\r\n                  } \r\n              }\r\n              else\r\n              {\r\n                  console.log(\"Record not added\")\r\n              }\r\n          })\r\n      }\r\n  \r\n      validatePassword()\r\n      {    \r\n          const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/;\r\n          return pattern.test(String(this.state.password)); \r\n      }\r\n    */\n\n  /*\r\n     render()\r\n     {        \r\n         return (\r\n             <div className=\"form-container\">                                           \r\n                     \r\n                 <Form>\r\n                     <Form.Group controlId=\"userName\">\r\n                         <Form.Label>UserName</Form.Label>\r\n                         <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleChange} />\r\n                     </Form.Group>\r\n     \r\n                     <Form.Group controlId=\"userName\">\r\n                         <Form.Label>Password</Form.Label>\r\n                         <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                     </Form.Group>\r\n             \r\n                     <LinkInClass value=\"Enter\" className=\"green-button\" onClick={this.handleSubmit}/>              \r\n             \r\n                     <Link className=\"green-button\" to={\"/MainPage\"}>Enter</Link>\r\n                 </Form>\r\n             </div>\r\n         )\r\n     }\r\n  */\n\n  /*\r\n      render()\r\n      {        \r\n          return (\r\n              <div>\r\n                  <img className=\"img-logo\" src=\"logo.png\" alt=\"\"/>\r\n                  <div className=\"form-container\" id = \"loginOrRegistrationForm\">  \r\n                      <Form>\r\n                          <Form.Group controlId=\"name\">\r\n                              <Form.Label>Name</Form.Label>\r\n                              <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n                          </Form.Group>\r\n  \r\n                          <Form.Group controlId=\"surname\">\r\n                              <Form.Label>Surname</Form.Label>\r\n                              <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"surname\" value={this.state.surname} onChange={this.handleChange} />\r\n                          </Form.Group>\r\n  \r\n                          <Form.Group controlId=\"username\">\r\n                              <Form.Label>Username</Form.Label>\r\n                              <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                          </Form.Group>\r\n  \r\n                          <Form.Group controlId=\"email\">\r\n                              <Form.Label>Email</Form.Label>\r\n                              <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                          </Form.Group>\r\n  \r\n                          <Form.Group controlId=\"password\">\r\n                              <Form.Label>Password</Form.Label>\r\n                              <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                          </Form.Group>\r\n      \r\n                          <Form.Group controlId=\"passwordConfirmation\">\r\n                              <Form.Label>Password Confirmation</Form.Label>\r\n                              <Form.Control ref = {(input) => { this.inputToFocus = input }} className = {this.validateConfirmPassword() ? \"input\" : \"input.error\"} type=\"password\" name=\"passwordConfirmation\" value={this.state.passwordConfirmation} onChange={this.handleChange}/>\r\n                          </Form.Group>\r\n                              \r\n                          <Link className=\"red-button\" to={\"/Login\"}>Cancel</Link>       \r\n                          <Link className=\"blue-button\" to={\"SignInOthers\"}>Sign In as a shop or worker</Link>\r\n                          <Link className=\"green-button\" to={\"/MainPage\"}>Sign In</Link>\r\n                      </Form>\r\n                  </div>\r\n              </div>\r\n          )\r\n      }*/\n\n  /*\r\n  render() \r\n  {     \r\n      return (\r\n          <form className=\"form-container\" noValidate = {true} id = \"loginOrRegistrationForm\">\r\n         \r\n              {this.state.isRegistered ? <Redirect to=\"/DisplayAllCars\"/> : null} \r\n          \r\n              <h2>New User Registration</h2>\r\n         \r\n              <input  \r\n                  name = \"name\"              \r\n                  type = \"text\"\r\n                  placeholder = \"Name\"\r\n                  autoComplete=\"name\"\r\n                  value = {this.state.name}\r\n                  onChange = {this.handleChange}\r\n                  ref = {(input) => { this.inputToFocus = input }} \r\n              /><br/>           \r\n         <input  \r\n                  name = \"email\"              \r\n                  type = \"email\"\r\n                  placeholder = \"Email\"\r\n                  autoComplete=\"email\"\r\n                  value = {this.state.email}\r\n                  onChange = {this.handleChange}\r\n              /><br/>              \r\n         <input  \r\n                  name = \"password\"           \r\n                  type = \"password\"\r\n                  placeholder = \"Password\"\r\n                  autoComplete=\"password\"\r\n                  title = \"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (£!#€$%^&*)\"\r\n                  value = {this.state.password}\r\n                  onChange = {this.handleChange}\r\n              /><br/>           \r\n                <input          \r\n                  name = \"confirmPassword\"    \r\n                  type = \"password\"\r\n                  placeholder = \"Confirm password\"\r\n                  autoComplete=\"confirmPassword\"\r\n                  value = {this.state.confirmPassword}\r\n                  onChange = {this.handleChange}\r\n              /><br/><br/>\r\n              \r\n              <LinkInClass value=\"Register New User\" className=\"green-button\" onClick={this.handleSubmit} />\r\n              <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>   \r\n          </form>\r\n      )\r\n  }\r\n  */\n\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\BeachExpress\\client\\src\\components\\SignIn.js"],"names":["React","Component","Redirect","Link","Form","axios","SERVER_HOST","LinkInClass","SignIn","constructor","props","handleChange","e","setState","target","name","value","state","username","surname","email","password","passwordConfirmation","validateConfirmPassword"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,QAAR,EAAkBC,IAAlB,QAA6B,kBAA7B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SAAQC,WAAR,QAA0B,4BAA1B;AAEA,OAAOC,WAAP,MAAwB,2BAAxB;AAGA,eAAe,MAAMC,MAAN,SAAqBP,SAArB,CACf;AACIQ,EAAAA,WAAW,CAACC,KAAD,EACX;AACI,UAAMA,KAAN;;AADJ,SAqBAC,YArBA,GAqBgBC,CAAD,IACf;AACI,WAAKC,QAAL,CAAc;AAAC,SAACD,CAAC,CAACE,MAAF,CAASC,IAAV,GAAiBH,CAAC,CAACE,MAAF,CAASE;AAA3B,OAAd;AAEH,KAzBD;;AAGI,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAC,EADA;AAETH,MAAAA,IAAI,EAAC,EAFI;AAGTI,MAAAA,OAAO,EAAC,EAHC;AAITC,MAAAA,KAAK,EAAC,EAJG;AAKTC,MAAAA,QAAQ,EAAC,EALA;AAMTC,MAAAA,oBAAoB,EAAC;AANZ,KAAb;AASH;AAGD;;;;;;;AAYAC,EAAAA,uBAAuB,GACvB;AACI,WAAQ,KAAKN,KAAL,CAAWI,QAAX,KAAwB,KAAKJ,KAAL,CAAWK,oBAA3C;AACH;AACL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCC;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+CI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA/IJ","sourcesContent":["import React, {Component} from \"react\"\r\nimport {Redirect, Link} from \"react-router-dom\"\r\nimport Form from \"react-bootstrap/Form\"\r\n\r\nimport axios from \"axios\"\r\n\r\nimport {SERVER_HOST} from \"../config/global_constants\"\r\n\r\nimport LinkInClass from \"../components/LinkInClass\"\r\n\r\n\r\nexport default class SignIn extends Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            username:\"\",\r\n            name:\"\",\r\n            surname:\"\",\r\n            email:\"\",\r\n            password:\"\",\r\n            passwordConfirmation:\"\"\r\n\r\n        }\r\n    }\r\n\r\n\r\n    /*componentDidMount() \r\n    {     \r\n        this.inputToFocus.focus()        \r\n    }\r\n    */\r\n\r\n    handleChange = (e) => \r\n    {\r\n        this.setState({[e.target.name]: e.target.value})\r\n\r\n    }\r\n\r\n    validateConfirmPassword()\r\n    {    \r\n        return (this.state.password === this.state.passwordConfirmation); \r\n    }\r\n/*\r\n    handleSubmit = (e) => \r\n    {\r\n        e.preventDefault()\r\n\r\n        const userObject = {\r\n            userName: this.state.userName,\r\n            password: this.state.password\r\n        }\r\n\r\n        axios.get(`${SERVER_HOST}/users`, userObject)\r\n        .then(res => \r\n        {   \r\n            if(res.data)\r\n            {\r\n                if (res.data.errorMessage)\r\n                {\r\n                    console.log(res.data.errorMessage)    \r\n                }\r\n                else\r\n                {   \r\n                    console.log(\"Record added\")\r\n                    this.setState({redirectToDisplayAllCars:true})\r\n                } \r\n            }\r\n            else\r\n            {\r\n                console.log(\"Record not added\")\r\n            }\r\n        })\r\n    }\r\n\r\n    validatePassword()\r\n    {    \r\n        const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/;\r\n        return pattern.test(String(this.state.password)); \r\n    }\r\n  */\r\n /*\r\n    render()\r\n    {        \r\n        return (\r\n            <div className=\"form-container\">                                           \r\n                    \r\n                <Form>\r\n                    <Form.Group controlId=\"userName\">\r\n                        <Form.Label>UserName</Form.Label>\r\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId=\"userName\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n            \r\n                    <LinkInClass value=\"Enter\" className=\"green-button\" onClick={this.handleSubmit}/>              \r\n            \r\n                    <Link className=\"green-button\" to={\"/MainPage\"}>Enter</Link>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n*/\r\n/*\r\n    render()\r\n    {        \r\n        return (\r\n            <div>\r\n                <img className=\"img-logo\" src=\"logo.png\" alt=\"\"/>\r\n                <div className=\"form-container\" id = \"loginOrRegistrationForm\">  \r\n                    <Form>\r\n                        <Form.Group controlId=\"name\">\r\n                            <Form.Label>Name</Form.Label>\r\n                            <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"surname\">\r\n                            <Form.Label>Surname</Form.Label>\r\n                            <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"surname\" value={this.state.surname} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"username\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"email\">\r\n                            <Form.Label>Email</Form.Label>\r\n                            <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n    \r\n                        <Form.Group controlId=\"passwordConfirmation\">\r\n                            <Form.Label>Password Confirmation</Form.Label>\r\n                            <Form.Control ref = {(input) => { this.inputToFocus = input }} className = {this.validateConfirmPassword() ? \"input\" : \"input.error\"} type=\"password\" name=\"passwordConfirmation\" value={this.state.passwordConfirmation} onChange={this.handleChange}/>\r\n                        </Form.Group>\r\n                            \r\n                        <Link className=\"red-button\" to={\"/Login\"}>Cancel</Link>       \r\n                        <Link className=\"blue-button\" to={\"SignInOthers\"}>Sign In as a shop or worker</Link>\r\n                        <Link className=\"green-button\" to={\"/MainPage\"}>Sign In</Link>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }*/\r\n\r\n    /*\r\n    render() \r\n    {     \r\n        return (\r\n            <form className=\"form-container\" noValidate = {true} id = \"loginOrRegistrationForm\">\r\n           \r\n                {this.state.isRegistered ? <Redirect to=\"/DisplayAllCars\"/> : null} \r\n            \r\n                <h2>New User Registration</h2>\r\n           \r\n                <input  \r\n                    name = \"name\"              \r\n                    type = \"text\"\r\n                    placeholder = \"Name\"\r\n                    autoComplete=\"name\"\r\n                    value = {this.state.name}\r\n                    onChange = {this.handleChange}\r\n                    ref = {(input) => { this.inputToFocus = input }} \r\n                /><br/>           \r\n\r\n\t        <input  \r\n                    name = \"email\"              \r\n                    type = \"email\"\r\n                    placeholder = \"Email\"\r\n                    autoComplete=\"email\"\r\n                    value = {this.state.email}\r\n                    onChange = {this.handleChange}\r\n                /><br/>              \r\n\r\n\t        <input  \r\n                    name = \"password\"           \r\n                    type = \"password\"\r\n                    placeholder = \"Password\"\r\n                    autoComplete=\"password\"\r\n                    title = \"Password must be at least ten-digits long and contains at least one lowercase letter, one uppercase letter, one digit and one of the following characters (£!#€$%^&*)\"\r\n                    value = {this.state.password}\r\n                    onChange = {this.handleChange}\r\n                /><br/>           \r\n\r\n                <input          \r\n                    name = \"confirmPassword\"    \r\n                    type = \"password\"\r\n                    placeholder = \"Confirm password\"\r\n                    autoComplete=\"confirmPassword\"\r\n                    value = {this.state.confirmPassword}\r\n                    onChange = {this.handleChange}\r\n                /><br/><br/>\r\n                \r\n                <LinkInClass value=\"Register New User\" className=\"green-button\" onClick={this.handleSubmit} />\r\n                <Link className=\"red-button\" to={\"/DisplayAllCars\"}>Cancel</Link>   \r\n            </form>\r\n        )\r\n    }\r\n    */\r\n}\r\n"]},"metadata":{},"sourceType":"module"}