{"ast":null,"code":"var _jsxFileName = \"C:\\\\nodejs_projects\\\\BeachExpress\\\\client\\\\src\\\\components\\\\Login.js\";\nimport React, { Component } from \"react\";\nimport { Redirect, Link } from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport axios from \"axios\";\nimport { SERVER_HOST } from \"../config/global_constants\";\nimport LinkInClass from \"../components/LinkInClass\";\nexport default class Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n      console.log(this.state.username);\n    };\n\n    this.state = {\n      username: \"\",\n      password: \"\"\n    };\n  }\n  /*componentDidMount() \r\n  {     \r\n      this.inputToFocus.focus()        \r\n  }\r\n  */\n\n\n  /*\r\n      handleSubmit = (e) => \r\n      {\r\n          e.preventDefault()\r\n  \r\n          const userObject = {\r\n              userName: this.state.userName,\r\n              password: this.state.password\r\n          }\r\n  \r\n          axios.get(`${SERVER_HOST}/users`, userObject)\r\n          .then(res => \r\n          {   \r\n              if(res.data)\r\n              {\r\n                  if (res.data.errorMessage)\r\n                  {\r\n                      console.log(res.data.errorMessage)    \r\n                  }\r\n                  else\r\n                  {   \r\n                      console.log(\"Record added\")\r\n                      this.setState({redirectToDisplayAllCars:true})\r\n                  } \r\n              }\r\n              else\r\n              {\r\n                  console.log(\"Record not added\")\r\n              }\r\n          })\r\n      }\r\n  \r\n      validatePassword()\r\n      {    \r\n          const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/;\r\n          return pattern.test(String(this.state.password)); \r\n      }\r\n    */\n\n  /*\r\n     render()\r\n     {        \r\n         return (\r\n             <div className=\"form-container\">                                           \r\n                     \r\n                 <Form>\r\n                     <Form.Group controlId=\"userName\">\r\n                         <Form.Label>UserName</Form.Label>\r\n                         <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleChange} />\r\n                     </Form.Group>\r\n     \r\n                     <Form.Group controlId=\"userName\">\r\n                         <Form.Label>Password</Form.Label>\r\n                         <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                     </Form.Group>\r\n             \r\n                     <LinkInClass value=\"Enter\" className=\"green-button\" onClick={this.handleSubmit}/>              \r\n             \r\n                     <Link className=\"green-button\" to={\"/MainPage\"}>Enter</Link>\r\n                 </Form>\r\n             </div>\r\n         )\r\n     }\r\n  */\n\n  /*\r\n      render()\r\n      {        \r\n          return (\r\n              <div>\r\n                  <img className=\"img-logo\" src=\"logo.png\" alt=\"\"/>\r\n                  <div className=\"form-container\">  \r\n                      <Form>\r\n                          <Form.Group controlId=\"username\">\r\n                              <Form.Label>Username</Form.Label>\r\n                              <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                          </Form.Group>\r\n              \r\n                          <Form.Group controlId=\"password\">\r\n                              <Form.Label>Password</Form.Label>\r\n                              <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                          </Form.Group>\r\n                              \r\n                          <Link className=\"green-button\" to={\"/MainPage\"}>Log In</Link>       \r\n                      \r\n                          <Link className=\"blue-button\" to={\"/SignIn\"}>Sign In</Link>\r\n                      </Form>\r\n                  </div>\r\n              </div>\r\n          )\r\n      }\r\n      */\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      className: \"img-logo\",\n      src: \"logo.png\",\n      alt: \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"form-container\",\n      noValidate: true,\n      id: \"loginOrRegistrationForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"label-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Name\"), React.createElement(\"input\", {\n      className: this.state.isValidName || !this.state.submited ? \"input-form\" : \"input-form-error\",\n      name: \"name\",\n      type: \"text\",\n      placeholder: \"Charles\",\n      autoComplete: \"name\",\n      value: this.state.name,\n      onChange: this.handleChange,\n      ref: input => this.inputToFocus = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      className: \"label-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, \"Surname\"), React.createElement(\"input\", {\n      className: this.state.isValidSurname || !this.state.submited ? \"input-form\" : \"input-form-error\",\n      name: \"surname\",\n      type: \"text\",\n      placeholder: \"Smith\",\n      autoComplete: \"surname\",\n      value: this.state.surname,\n      onChange: this.handleChange,\n      ref: input => this.inputToFocus = input,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(Link, {\n      className: \"green-button\",\n      to: \"/MainPage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, \"Log In\"), React.createElement(Link, {\n      className: \"blue-button\",\n      to: \"/SignIn\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Sign In\")));\n  }\n\n}","map":{"version":3,"sources":["C:\\nodejs_projects\\BeachExpress\\client\\src\\components\\Login.js"],"names":["React","Component","Redirect","Link","Form","axios","SERVER_HOST","LinkInClass","Login","constructor","props","handleChange","e","setState","target","name","value","console","log","state","username","password","render","isValidName","submited","input","inputToFocus","isValidSurname","surname"],"mappings":"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","sourcesContent":["import React, {Component} from \"react\"\r\nimport {Redirect, Link} from \"react-router-dom\"\r\nimport Form from \"react-bootstrap/Form\"\r\n\r\nimport axios from \"axios\"\r\n\r\nimport {SERVER_HOST} from \"../config/global_constants\"\r\n\r\nimport LinkInClass from \"../components/LinkInClass\"\r\n\r\n\r\nexport default class Login extends Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props)\r\n        \r\n        this.state = {\r\n            username:\"\",\r\n            password:\"\"\r\n        }\r\n    }\r\n\r\n\r\n    /*componentDidMount() \r\n    {     \r\n        this.inputToFocus.focus()        \r\n    }\r\n    */\r\n\r\n    handleChange = (e) => \r\n    {\r\n        this.setState({[e.target.name]: e.target.value})\r\n\r\n        console.log(this.state.username)\r\n    }\r\n/*\r\n    handleSubmit = (e) => \r\n    {\r\n        e.preventDefault()\r\n\r\n        const userObject = {\r\n            userName: this.state.userName,\r\n            password: this.state.password\r\n        }\r\n\r\n        axios.get(`${SERVER_HOST}/users`, userObject)\r\n        .then(res => \r\n        {   \r\n            if(res.data)\r\n            {\r\n                if (res.data.errorMessage)\r\n                {\r\n                    console.log(res.data.errorMessage)    \r\n                }\r\n                else\r\n                {   \r\n                    console.log(\"Record added\")\r\n                    this.setState({redirectToDisplayAllCars:true})\r\n                } \r\n            }\r\n            else\r\n            {\r\n                console.log(\"Record not added\")\r\n            }\r\n        })\r\n    }\r\n\r\n    validatePassword()\r\n    {    \r\n        const pattern = /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[£!#€$%^&*]).{10,}$/;\r\n        return pattern.test(String(this.state.password)); \r\n    }\r\n  */\r\n /*\r\n    render()\r\n    {        \r\n        return (\r\n            <div className=\"form-container\">                                           \r\n                    \r\n                <Form>\r\n                    <Form.Group controlId=\"userName\">\r\n                        <Form.Label>UserName</Form.Label>\r\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n    \r\n                    <Form.Group controlId=\"userName\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                    </Form.Group>\r\n            \r\n                    <LinkInClass value=\"Enter\" className=\"green-button\" onClick={this.handleSubmit}/>              \r\n            \r\n                    <Link className=\"green-button\" to={\"/MainPage\"}>Enter</Link>\r\n                </Form>\r\n            </div>\r\n        )\r\n    }\r\n*/\r\n/*\r\n    render()\r\n    {        \r\n        return (\r\n            <div>\r\n                <img className=\"img-logo\" src=\"logo.png\" alt=\"\"/>\r\n                <div className=\"form-container\">  \r\n                    <Form>\r\n                        <Form.Group controlId=\"username\">\r\n                            <Form.Label>Username</Form.Label>\r\n                            <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                        </Form.Group>\r\n            \r\n                        <Form.Group controlId=\"password\">\r\n                            <Form.Label>Password</Form.Label>\r\n                            <Form.Control ref = {(input) => { this.inputToFocus = input }} type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\r\n                        </Form.Group>\r\n                            \r\n                        <Link className=\"green-button\" to={\"/MainPage\"}>Log In</Link>       \r\n                    \r\n                        <Link className=\"blue-button\" to={\"/SignIn\"}>Sign In</Link>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    */\r\n   render() \r\n    {     \r\n        return (\r\n            <div> \r\n                <img className=\"img-logo\" src=\"logo.png\" alt=\"\"/>\r\n\r\n                <form className=\"form-container\" noValidate = {true} id = \"loginOrRegistrationForm\">\r\n                \r\n                    \r\n                    <label className=\"label-form\">Name</label>\r\n                    <input  className = {this.state.isValidName|| !this.state.submited ? \"input-form\" : \"input-form-error\"}\r\n                        name = \"name\"              \r\n                        type = \"text\"\r\n                        placeholder = \"Charles\"\r\n                        autoComplete=\"name\"\r\n                        value = {this.state.name}\r\n                        onChange = {this.handleChange}\r\n                        ref = {input => this.inputToFocus = input}\r\n                    /><br/> \r\n\r\n                    <label className=\"label-form\">Surname</label>  \r\n                    <input  className = {this.state.isValidSurname || !this.state.submited? \"input-form\" : \"input-form-error\"}\r\n                        name = \"surname\"              \r\n                        type = \"text\"\r\n                        placeholder = \"Smith\"\r\n                        autoComplete=\"surname\"\r\n                        value = {this.state.surname}\r\n                        onChange = {this.handleChange}\r\n                        ref = {input => this.inputToFocus = input}\r\n                    /><br/>    \r\n\r\n                    <br></br>\r\n                    \r\n                    <Link className=\"green-button\" to={\"/MainPage\"}>Log In</Link>       \r\n                    \r\n                    <Link className=\"blue-button\" to={\"/SignIn\"}>Sign In</Link>\r\n                      \r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}